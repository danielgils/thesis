des1[[3]]$error
for (i in 1:12){
Decode(des1[[i]]$design, n.alts = 2,
lvl.names = list(c('5000', '5100', '5200', '5300'),
c('3.8', '4.1', '4.4', '4.7'),
c("1.259", "12.589", "125.893"),
c("none", "blue", "gold"),
c("no", "yes")),
coding = ctype, c.lvls = clvls)
des1[[i]]$error
}
i=5
Decode(des1[[i]]$design, n.alts = 2,
lvl.names = list(c('5000', '5100', '5200', '5300'),
c('3.8', '4.1', '4.4', '4.7'),
c("1.259", "12.589", "125.893"),
c("none", "blue", "gold"),
c("no", "yes")),
coding = ctype, c.lvls = clvls)
des1[[i]]$error
for (i in 1:12){
Decode(des1[[i]]$design, n.alts = 2,
lvl.names = list(c('5000', '5100', '5200', '5300'),
c('3.8', '4.1', '4.4', '4.7'),
c("1.259", "12.589", "125.893"),
c("none", "blue", "gold"),
c("no", "yes")),
coding = ctype, c.lvls = clvls)
print(des1[[i]]$error)
}
exp(0)
est1.1.theta <- c(0.1034 ,
0.3129 ,
0.5522 ,
0.4773 ,
0.2965 ,
0.001 ,
0.0054 ,
0.1797 ,
0.1101 ,
0.244 ,
0.3325,
0.9536)
est1.1.ana <- c(0.8443,
0.9669,
0.6503 )
TRUEtheta1 <- c(0.1, 0.3, 0.5, 0.55, 0.33, 0.01, 0.08, 0.66, 0.2, 0.11, 0.22, 0.33)
TRUEalpha1 <- c(0.70, 0.80, 0.90, 0.99)
plot(TRUEtheta1, est1.1.theta)
est1.1.theta <- c(0.1034 ,
0.3129 ,
0.5522 ,
0.4773 ,
0.2965 ,
0.001 ,
0.0054 ,
0.1797 ,
0.1101 ,
0.244 ,
0.3325,
0.9536)
plot(TRUEtheta1, est1.1.theta)
cor(TRUEtheta1, est1.1.theta)
load("data.ISN_SCT_R_ANA_4atts_Trule_1.RData")
setwd("C:/Users/u0105757/Desktop/SUPER COMP/SCT ANA R sims/4 attributes")
load("data.ISN_SCT_R_ANA_4atts_Trule_1.RData")
est1.1.theta <- c(0.1034 ,
0.3129 ,
0.5522 ,
0.4773 ,
0.2965 ,
0.001 ,
0.0054 ,
0.6548,
0.1797 ,
0.1101 ,
0.244 ,
0.3325)
est1.1.ana <- c(0.9536,
0.8443,
0.9669,
0.6503 )
plot(TRUEtheta1, est1.1.theta)
cor(TRUEtheta1, est1.1.theta)
points(TRUEalpha1, est1.1.ana)
plot(TRUEtheta1, est1.1.theta, ylim=c(0,1), xlim = c(0,1), col='orange')
plot(TRUEtheta1, est1.1.theta, ylim=c(0,1), xlim = c(0,1), col='blue')
points(TRUEalpha1, est1.1.ana, col='green')
plot(TRUEtheta1, est1.1.theta, ylim=c(0,1), xlim = c(0,1), col='blue')
points(TRUEalpha1, est1.1.ana, col='green')
cor(TRUEtheta1, est1.1.theta)
plot(TRUEtheta1, est1.2.theta, ylim=c(0,1), xlim = c(0,1), col='blue')
points(TRUEalpha1, est1.2.ana, col='green')
est1.2.theta <- c(0.001,
0.2346,
0.5011 ,
0.584 ,
0.4401 ,
0.2048 ,
0.001 ,
0.6531 ,
0.1759 ,
0.001 ,
0.1513 ,
0.2507 )
est1.2.ana <- c(
0.9612,
0.9384 ,
0.768 ,
0.7308)
plot(TRUEtheta1, est1.2.theta, ylim=c(0,1), xlim = c(0,1), col='blue')
points(TRUEalpha1, est1.2.ana, col='green')
cor(TRUEtheta1, est1.1.theta)
cor(c(TRUEtheta1, TRUEalpha1), c(est1.2.theta, est1.2.ana))
cor(c(TRUEtheta1, TRUEalpha1), c(est1.1.theta, est1.1.ana))
est1.3.theta <- c(
0.0809,
0.2957,
0.541,
0.4773,
0.2965,
0.001,
0.0632,
0.6748 ,
0.2274,
0.0783,
0.217,
0.3087)
est1.3.ana <- c(
0.784,
0.762,
0.947,
0.8949)
plot(TRUEtheta1, est1.3.theta, ylim=c(0,1), xlim = c(0,1), col='blue')
points(TRUEalpha1, est1.2.ana, col='green')
points(TRUEalpha1, est1.3.ana, col='green')
cor(c(TRUEtheta1, TRUEalpha1), c(est1.3.theta, est1.3.ana))
points(TRUEtheta1, est1.2.theta, ylim=c(0,1), xlim = c(0,1), col='blue')
plot(TRUEtheta1, est1.3.theta, ylim=c(0,1), xlim = c(0,1), col='blue')
points(TRUEalpha1, est1.3.ana, col='green')
cor(c(TRUEtheta1, TRUEalpha1), c(est1.3.theta, est1.3.ana))
a=1
b=3
c=1
plot(TRUEtheta1[a:b], est1.3.theta[a:b], ylim=c(0,1), xlim = c(0,1), col='blue')
points(TRUEalpha1[c], est1.3.ana[c], col='green')
points(TRUEalpha1[c], est1.3.ana[c], col='green', type = 'l')
plot(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.3.theta[a:b], est1.3.ana[c]), col=c('blue', 'blue', 'blue','green'), type = 'l')
a=4
b=6
c=2
points(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.3.theta[a:b], est1.3.ana[c]), col=c('blue', 'blue', 'blue','green'), type = 'l')
plot(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.3.theta[a:b], est1.3.ana[c]), col=c('blue', 'blue', 'blue','green'))
a=1
b=3
c=1
plot(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.3.theta[a:b], est1.3.ana[c]), col=c('blue', 'blue', 'blue','green'), type = 'l')
a=1
b=3
c=1
plot(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.3.theta[a:b], est1.3.ana[c]), col=c('blue', 'blue', 'blue','green'), type = 'l')
points(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.2.theta[a:b], est1.2.ana[c]), col=c('blue', 'blue', 'blue','green'), type='l')
plot(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.3.theta[a:b], est1.3.ana[c]), col=c('blue', 'blue', 'blue','green'), type = 'l', xlim = c(0,1), ylim=c(0,1))
points(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.2.theta[a:b], est1.2.ana[c]), col=c('blue', 'blue', 'blue','green'), type='l')
TRUEtheta1[a:b] * TRUEalpha1[c]
plot((TRUEtheta1[a:b] * TRUEalpha1[c]), (est1.3.theta[a:b] * est1.3.ana[c]), col='blue', xlim = c(0,1), ylim=c(0,1))
points((TRUEtheta1[a:b] * TRUEalpha1[c]), (est1.2.theta[a:b] * est1.2.ana[c]), col='blue', xlim = c(0,1), ylim=c(0,1))
a=4
b=6
c=2
plot(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.3.theta[a:b], est1.3.ana[c]), col=c('blue', 'blue', 'blue','green'), type = 'l', xlim = c(0,1), ylim=c(0,1))
points(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.2.theta[a:b], est1.2.ana[c]), col=c('blue', 'blue', 'blue','green'), type='l')
plot((TRUEtheta1[a:b] * TRUEalpha1[c]), (est1.3.theta[a:b] * est1.3.ana[c]), col='blue', xlim = c(0,1), ylim=c(0,1))
points((TRUEtheta1[a:b] * TRUEalpha1[c]), (est1.2.theta[a:b] * est1.2.ana[c]), col='blue', xlim = c(0,1), ylim=c(0,1))
a=1
b=3
c=1
plot(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.3.theta[a:b], est1.3.ana[c]), col=c('blue', 'blue', 'blue','green'), type = 'l', xlim = c(0,1), ylim=c(0,1))
points(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.2.theta[a:b], est1.2.ana[c]), col=c('blue', 'blue', 'blue','green'), type='l')
plot((TRUEtheta1[a:b] * TRUEalpha1[c]), (est1.3.theta[a:b] * est1.3.ana[c]), col='blue', xlim = c(0,1), ylim=c(0,1))
points((TRUEtheta1[a:b] * TRUEalpha1[c]), (est1.2.theta[a:b] * est1.2.ana[c]), col='blue', xlim = c(0,1), ylim=c(0,1))
a=4
b=6
c=2
plot(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.3.theta[a:b], est1.3.ana[c]), col=c('blue', 'blue', 'blue','green'), type = 'l', xlim = c(0,1), ylim=c(0,1))
points(c(TRUEtheta1[a:b], TRUEalpha1[c]), c(est1.2.theta[a:b], est1.2.ana[c]), col=c('blue', 'blue', 'blue','green'), type='l')
plot((TRUEtheta1[a:b] * TRUEalpha1[c]), (est1.3.theta[a:b] * est1.3.ana[c]), col='blue', xlim = c(0,1), ylim=c(0,1))
points((TRUEtheta1[a:b] * TRUEalpha1[c]), (est1.2.theta[a:b] * est1.2.ana[c]), col='blue', xlim = c(0,1), ylim=c(0,1))
a=7
b=9
c=3
plot((TRUEtheta1[a:b] * TRUEalpha1[c]), (est1.3.theta[a:b] * est1.3.ana[c]), col='blue', xlim = c(0,1), ylim=c(0,1))
points((TRUEtheta1[a:b] * TRUEalpha1[c]), (est1.2.theta[a:b] * est1.2.ana[c]), col='blue', xlim = c(0,1), ylim=c(0,1))
TRUEtheta1 <- c(0.1, 0.3, 0.5, 0.55, 0.33, 0.01, 0.08, 0.66, 0.2, 0.11, 0.22, 0.33)
TRUEalpha1 <- c(0.70, 0.80, 0.90, 0.99)
TRUEtheta2 <- c(0.1, 0.5, 0.99, 0.65, 0.33, 0.01, 0.08, 0.56, 0.75, 0.15, 0.45, 0.66)
TRUEalpha2 <- c(0.50, 0.70, 0.90, 0.99)
est1.1.theta <- c(0.1034 ,
0.3129 ,
0.5522 ,
0.4773 ,
0.2965 ,
0.001 ,
0.0054 ,
0.6548,
0.1797 ,
0.1101 ,
0.244 ,
0.3325)
est1.1.ana <- c(0.9536,
0.8443,
0.9669,
0.6503 )
plot(TRUEtheta1, est1.1.theta, ylim=c(0,1), xlim = c(0,1), col='blue')
points(TRUEalpha1, est1.1.ana, col='green')
cor(c(TRUEtheta1, TRUEalpha1), c(est1.1.theta, est1.1.ana))
est1.2.theta <- c(0.001,
0.2346,
0.5011 ,
0.584 ,
0.4401 ,
0.2048 ,
0.001 ,
0.6531 ,
0.1759 ,
0.001 ,
0.1513 ,
0.2507 )
est1.2.ana <- c(
0.9612,
0.9384 ,
0.768 ,
0.7308)
plot(TRUEtheta1, est1.2.theta, ylim=c(0,1), xlim = c(0,1), col='blue')
points(TRUEalpha1, est1.2.ana, col='green')
cor(c(TRUEtheta1, TRUEalpha1), c(est1.2.theta, est1.2.ana))
est1.3.theta <- c(
0.0809,
0.2957,
0.541,
0.4773,
0.2965,
0.001,
0.0632,
0.6748 ,
0.2274,
0.0783,
0.217,
0.3087)
est1.3.ana <- c(
0.784,
0.762,
0.947,
0.8949)
plot(TRUEtheta1, est1.3.theta, ylim=c(0,1), xlim = c(0,1), col='blue')
points(TRUEalpha1, est1.3.ana, col='green')
driet<- c(0.0717,
0.4836,
0.9936,
0.6274,
0.5424,
0.216,
0.0855,
0.5667 ,
0.7828 ,
0.8552 ,
0.461 ,
0.8686 ,
0.4256 ,
0.5549 ,
0.9185 ,
0.9375 )
plot(c(TRUEtheta3, TRUEalpha3),  driet)
TRUEtheta3 <- c(0.1, 0.5, 0.99, 0.65, 0.53, 0.21, 0.08, 0.56, 0.75, 0.88, 0.5, 0.9)
TRUEalpha3 <- c(0.40, 0.60, 0.90, 0.99)
plot(c(TRUEtheta3, TRUEalpha3),  driet)
cor(c(TRUEtheta3, TRUEalpha3),  driet)
0.63/0.13
0.13/0.63
# Chunk 1
knitr::opts_chunk$set(cache = TRUE, echo = TRUE, fig.align = 'center',background = "azure", comment="",
message=FALSE,tidy.opts=list(keep.blank.line=TRUE, width.cutoff=40),
options(width=80))
# Chunk 2
library(idefix)
# 3 Attributes with respectively 3, 4 and 2 levels:
at.lvls <- c(3,4,2)
# All Effect coded:
c.type <- rep("E", length(at.lvls))
# Generate profiles:
Profiles(lvls= at.lvls, coding= c.type)
# Chunk 3
# 3 Attributes, 2 are dummy coded and 1 continuous (= 3 parameters).
cs <- Profiles(lvls=c(3, 4, 2), coding=c("E", "E", "E"))
ps <- c(0.2, 0.8, -0.2, -0.5, -0.8, 0.3) # Prior parameter vector
Modfed(cand.set=cs, n.sets=8, n.alts=2, alt.cte= c(0, 0), par.draws= ps)
# Chunk 4
# Chunk 5
set.seed(123)
pm <- c(0.8, 0.3, 0.2, -0.3, -0.2) # Prior mean (4 parameters).
pc <- diag(length(pm)) # Prior variance
cs <- Profiles(lvls = c(3, 3), coding =c("E", "E"))
ps <- MASS::mvrnorm(n = 100, mu = pm, Sigma = pc) # 10 Samples
# Chunk 6
par(mar=c(1,1,1,1))
# Chunk 7
# Efficient design.
design <- Modfed(cand.set=cs, n.sets=8, n.alts= 2, alt.cte= c(1,0), par.draws=ps)$design
# Respons.
resp <- c(1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0)
# Sample from posterior.
draws <- ImpsampMNL(prior.mean= pm,prior.covar=pc,des=design,n.alts=2,y=resp,m=6)
draws
# Chunk 8
# Chunk 9
# DB efficient choice set, given a design and parameter samples.
# Candidate profiles
cs <- Profiles(lvls =c(3, 3), coding = c("C", "E"), c.lvls =list(c(5,3,1)))
m <- c(0.7, 0.3, -0.3, -0.2) # Prior mean (4 parameters).
pc <- diag(length(m)) # Prior variance
set.seed(123)
ps <- MASS::mvrnorm(n =10, mu =m, Sigma = pc) # 10 Samples.
ac <- c(1, 0) # Alternative specific constant.
# Initial design.
des <- Modfed(cand.set  =cs, n.sets =6, n.alts =2, alt.cte =ac, par.draws =ps)$design
# Efficient choice set to add.
SeqDB(des =des, cand.set  =cs, n.alts =2, par.draws =ps, prior.covar =pc)
# Chunk 10
# KL efficient choice set, given parameter samples.
# Candidate profiles
cs <- Profiles(lvls =c(3, 3), coding = c("C", "E"), c.lvls =list(c(5,3,1)))
m <- c(0.7, 0.3, -0.3, -0.2) # Prior mean (4 parameters).
pc <- diag(length(m)) # Prior variance
set.seed(123)
ps <- MASS::mvrnorm(n =10, mu =m, Sigma = pc) # 10 Samples.
ac <- c(1, 0) # Alternative specific constant.
# Efficient choice set to add.
SeqKL(cand.set  =cs, n.alts =2, alt.cte =ac, par.draws =ps, weights = NULL)
# Chunk 11
# 3 Attributes, 2 are dummy coded and 1 continuous.
cs <- Profiles(lvls =c(2, 3, 2), coding = c("D", "C", "D"), c.lvls =list(c(2,4,6)))
p <- c(0.8, 0.2, -0.3) # parameter vector
# Generate design
des <- Modfed(cand.set  =cs, n.sets =8, n.alts =2, alt.cte =c(0,0), par.draws =p)$des
des
# Generate responses
y <- RespondMNL(par =p, des =des, n.alts =2)
y
# Chunk 12
# 3 Attributes, 2 are dummy coded and 1 continuous.
cs <- Profiles(lvls =c(2, 3, 2), coding = c("D", "C", "D"), c.lvls =list(c(2,4,6)))
p <- c(0.8, 0.2, -0.3) # parameter vector
# Generate design
des <- Modfed(cand.set  =cs, n.sets =8, n.alts =2, alt.cte =c(0,0), par.draws =p)$des
des <- rbind(des, des)
y <- RespondMNL(par = p, des = des, n.alts = 2)
y <- matrix(y, 32)
# Chunk 13
des
y
# Data transformation for rbprobitGibbs.
Datatrans(pkg = 4, des = des, y = y, n.alts = 2, n.sets = 8, n.resp = 2,
n.par = 3, no.choice = FALSE, bin = TRUE)
p <- c(0.8, 0.2, -0.3, -0.5, 0.4) # parameter vector
cs <- Profiles(lvls =c(3, 3, 2), coding = c("D", "D", "D"))
p <- c(0.8, 0.2, -0.3, -0.5, 0.4) # parameter vector
?Modfed
des <- Modfed(cand.set = cs, n.sets = 8, n.alts = 2, alt.cte = c(0, 0), par.draws = p)$des
des
y <- RespondMNL(par =p, des =des, n.alts =2)
y
?Datatrans
cs <- Profiles(lvls = c(3, 3, 3), coding = c("D", "D", "D")))
cs <- Profiles(lvls = c(3, 3, 3), coding = c("D", "D", "D"))
p <- c(0.8, 0.2, -0.3, -0.5, 0.4) # parameter vector
des <- Modfed(cand.set  = cs, n.sets = 8, n.alts = 2, alt.cte = c(0, 0), par.draws =p)$des
cs <- Profiles(lvls = c(3, 3, 2), coding = c("D", "D", "D"))
p <- c(0.8, 0.2, -0.3, -0.5, 0.4) # parameter vector
des <- Modfed(cand.set  = cs, n.sets = 8, n.alts = 2, alt.cte = c(0, 0), par.draws =p)$des
des <- rbind(des, des)
y <- RespondMNL(par = p, des = des, n.alts = 2)
y <- matrix(y, 32)
Datatrans(pkg = 'mlogit', des = des, y = y, n.alts = 2, n.sets = 8, n.resp = 2,
n.par = 3, no.choice = FALSE, bin = TRUE)
y
Datatrans(pkg = 'mlogit', des = des, y = y, n.alts = 2, n.sets = 8, n.resp = 2,
bin = TRUE)
y
y <- is.vector(matrix(y, 32))
y
y <- as.vector(matrix(y, 32))
y
y <- RespondMNL(par = p, des = des, n.alts = 2)
y <- as.vector(matrix(y, 32))
y
Datatrans(pkg = 'mlogit', des = des, y = y, n.alts = 2, n.sets = 8, n.resp = 2,
bin = TRUE)
cs <- Profiles(lvls = c(3, 3), coding = c("C", "E"), c.lvls =list(c(5,3,1)))
m <- c(0.7, 0.3, -0.3, -0.2) # Prior mean (4 parameters).
pc <- diag(length(m)) # Prior variance
set.seed(123)
ps <- MASS::mvrnorm(n =10, mu =m, Sigma = pc) # 10 Samples.
ac <- c(1, 0) # Alternative specific constant.
des <- Modfed(cand.set = cs, n.sets = 6, n.alts = 2, alt.cte = ac, par.draws = ps)$design
rm(list= ls())
library(mlogit)
library(dplyr)
library(abind)
coffee <- read.table(file="C:\\Users\\u0105757\\Desktop\\SCT\\koffie data\\data\\data_longformat.txt", header = TRUE, sep = "\t")
coffee1 <- filter(coffee, block == 1)
coffee2 <- filter(coffee, block == 2)
dcoffee <- mlogit.data(coffee, shape = "long", choice = "select", alt.var = "altID", id.var = "personID")
dcoffee
rm(list = ls())
library(idefix)
library(dplyr)
betalabel <- c( "taste_desert", "taste_mokka",
"fair_yes",
"bio_yes",
"origin_braz", "origin_indo",
"prod_NL","prod_ita",
"3.35$", "4.35$", "5.99$",
"opt.out")
alphalabel <- c("taste", "fairtrade", "biological", "origin", "produced", "price")
load("C:/Users/u0105757/Dropbox/SCT/koffie data/R_files/MNL_des.RData")
coffee <- read.table(file="C:\\Users\\u0105757\\Desktop\\SCT\\koffie data\\data\\data_longformat.txt", header = TRUE, sep = "\t")
coffee1 <- filter(coffee, block == 1)
coffee2 <- filter(coffee, block == 2)
load("C:/Users/u0105757/Dropbox/SCT/koffie data/R_files/koffie_des1.RData")
load("C:/Users/u0105757/Dropbox/SCT/koffie data/R_files/koffie_des2.RData")
block1 <- filter(coffee, block == 1)
block2 <- filter(coffee, block == 2)
I1 <- length(unique(block1$personID))
I2 <- length(unique(block2$personID))
S = 6 # keuzesets
M = 4 # 4 alternatieven
N = 5 # totaal (+ opt out) alternatieven per set
A = S * M #totaal alternatieven
PK = 17 #parameters
P = 6 #attributen
L <- 2^M # aantal mogelijke consideration sets
choice.data1 <- block1$select
block1.ISN <- array(choice.data1, dim = c(N, S, I1))
block1.ISN <- aperm(block1.ISN, c(3, 2, 1))
choice.data2 <- block2$select
block2.ISN <- array(choice.data2, dim = c(N, S, I2))
block2.ISN <- aperm(block2.ISN, c(3, 2, 1))
View(block1)
View(block1)
View(block1)
rm(list=ls())
coffee <- read.table(file="C:\\Users\\u0105757\\Desktop\\SCT\\koffie data\\data\\data_longformat.txt", header = TRUE, sep = "\t")
coffee1 <- filter(coffee, block == 1)
coffee2 <- filter(coffee, block == 2)
load("C:/Users/u0105757/Dropbox/SCT/koffie data/R_files/koffie_des1.RData")
load("C:/Users/u0105757/Dropbox/SCT/koffie data/R_files/koffie_des2.RData")
block1 <- filter(coffee, block == 1)
block2 <- filter(coffee, block == 2)
I1 <- length(unique(block1$personID))
I2 <- length(unique(block2$personID))
S = 6 # keuzesets
M = 4 # 4 alternatieven
N = 5 # totaal (+ opt out) alternatieven per set
A = S * M #totaal alternatieven
PK = 17 #parameters
P = 6 #attributen
L <- 2^M # aantal mogelijke consideration sets
choice.data1 <- block1$select
block1.ISN <- array(choice.data1, dim = c(N, S, I1))
block1.ISN <- aperm(block1.ISN, c(3, 2, 1))
choice.data2 <- block2$select
block2.ISN <- array(choice.data2, dim = c(N, S, I2))
block2.ISN <- aperm(block2.ISN, c(3, 2, 1))
choice.data2
rm(list)
rm(list)
coffee <- read.table(file="C:\\Users\\u0105757\\Desktop\\SCT\\koffie data\\data\\data_longformat.txt", header = TRUE, sep = "\t")
load("C:/Users/u0105757/Dropbox/SCT/koffie data/R_files/koffie_des1.RData")
load("C:/Users/u0105757/Dropbox/SCT/koffie data/R_files/koffie_des2.RData")
attribute.levels <- c("2.35$", "3.35$", "4.35$", "5.99$",
"taste_mild", "taste_desert", "taste_mokka",
"fair_no", "fair_yes",
"bio_no", "bio_yes",
"origin_eth", "origin_braz", "origin_indo",
"prod_bel", "prod_NL","prod_ita")
attributes <- c("price", "taste", "fairtrade", "biological", "origin", "produced")
block1 <- filter(coffee, block == 1)
block2 <- filter(coffee, block == 2)
I1 <- length(unique(block1$personID))
I2 <- length(unique(block2$personID))
S = 6 # keuzesets
M = 4 # 4 alternatieven
N = 5 # met opt out.
A = S * M #totaal alternatieven
PK = 17 #parameters
P = 6 #attributen
choice.data1 <- block1$select
block1.ISN <- array(choice.data1, dim = c(N, S, I1))
block1.ISN <- aperm(block1.ISN, c(3, 2, 1))
choice.data2 <- block2$select
block2.ISN <- array(choice.data2, dim = c(N, S, I2))
block2.ISN <- aperm(block2.ISN, c(3, 2, 1))
load("C:/Users/u0105757/Desktop/dieter_thesis/MNL_des.RData")
View(MNL_des)
View(coffee)
1/5100
0.000196 * 5100
0.000196 * 5200
1/100
0.01*5100 + 1*1
-0.01*5100 + 1*1
-0.01*5200 + 1*2
